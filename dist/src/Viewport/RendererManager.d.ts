import { Scene, WebGLRenderer, Camera, Vector2 } from 'three';
import { Pass } from 'three/examples/jsm/postprocessing/Pass';
import { SAOPass } from 'three/examples/jsm/postprocessing/SAOPass';
import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';
import { OutlinePass } from 'three/examples/jsm/postprocessing/OutlinePass';
import { SSAARenderPass } from 'three/examples/jsm/postprocessing/SSAARenderPass';
import { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';
import { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';
import { CSS2DRenderer, CSS2DHalfRenderer, CSS3DRenderer } from '../Renderer';
import { BaseObject3D } from '../Library';
import { AxisEnum, InternalOptions, ClippingOptions, ViewportOptions } from '../Interface';
declare class RendererManager {
    scene: Scene;
    options: ViewportOptions;
    internalOptions: InternalOptions;
    effectComposer: EffectComposer | null;
    renderer: WebGLRenderer;
    container: HTMLElement;
    interactiveContainer: HTMLElement;
    rendererCSS2D: CSS2DRenderer;
    rendererCSS3D: CSS3DRenderer;
    rendererCSS2DHalf: CSS2DHalfRenderer;
    constructor(scene: Scene, options: ViewportOptions);
    initEffectComposer(camera: Camera): EffectComposer;
    initAllPass(camera: Camera): Record<string, Pass>;
    sceneClipping(options: ClippingOptions): void;
    changeSceneClipping(options: ClippingOptions): void;
    removeSceneClipping(axis?: AxisEnum): void;
    modelClipping(model: BaseObject3D, options: ClippingOptions): void;
    changeModelClipping(model: BaseObject3D, options: ClippingOptions): void;
    removeModelClipping(model: BaseObject3D, axis?: string): void;
    addPass(effectPass: Pass): void;
    setInternalState(name: string, state: boolean): void;
    getWidth(): number;
    getHeight(): number;
    getMouseRelativeConRatio(clientPoint: MouseEvent): number[];
    getMousePoint(clientPoint: MouseEvent): Vector2;
    _initContainer(): HTMLDivElement;
    _initRenderer(): WebGLRenderer;
    _initRenderCSS2D(): CSS2DRenderer;
    _initRenderCSS3D(): CSS3DRenderer;
    _initRenderCSS2DHalf(): CSS2DHalfRenderer;
    _initInteractiveContainer(): HTMLDivElement;
    _initFxaaPass(): ShaderPass;
    _initSsaaPass(camera: Camera): SSAARenderPass;
    _initOutlinePass(camera: Camera): OutlinePass;
    _initSweepingLightShaderPass(): ShaderPass;
    _initUnrealBloomPass(): UnrealBloomPass;
    _initSAOPass(camera: Camera): SAOPass;
}
export default RendererManager;
